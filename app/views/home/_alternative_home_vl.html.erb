<script type="text/javascript">
  var loaded_scales = new Array();
  //loaded_scales['organism'] = false;
  loaded_scales['all'] = true;
</script>
<%= render :partial => 'scales/scale_slider', :locals => {:current_scale => 'all',:scale_slider_function => (remote_function(
        :url=>{:action=>'scale_search', :controller=>'scales'},
        :with=>"'scale_type='+this.id",
        :before=>"show_ajax_loader(this.id+'_results')",
        :condition=>'!loaded_scales[this.id]') +
        "; loaded_scales[this.id] = true;
        $$('#scaled_items > div').invoke('hide');
        $(this.id+'_results').show();")} %>

<!--Inserting the javascripts for loading tabber dynamically-->
<div id="js_for_tabber"></div>

<%= javascript_include_tag "tabber-minimized.js" %>
<script type="text/javascript">
    function load_tabs() {
        var tabberOptions = {'onLoad':function() {
            displayTabs();
        }};
        tabberAutomatic(tabberOptions);
    }

    function tabs_on_click(scale_title, resource_type){
        var click_tab = document.getElementsByClassName(scale_title + '_' + resource_type)[0];
        click_tab.onclick = function(){
            deactivate_previous_tab();
            click_tab.parentElement.className = 'tabberactive';

            //if the content of the click_tab is already loaded, just show it, otherwise call ajax to get the content
            var tab_content_view_some_id = scale_title + '_' + resource_type + '_view_some';
            var tab_content_view_some = $(tab_content_view_some_id);
            var tab_content_view_all_id = scale_title + '_' + resource_type + '_view_all';
            var tab_content_view_all = $(tab_content_view_all_id);
            if (tab_content_view_all.childNodes.length > 0){
                tab_content_view_all.show();
            }else if (tab_content_view_some.childNodes.length > 0){
                tab_content_view_some.show();
            }else{
                tab_content_view_some.show();
                request = new Ajax.Request('<%= url_for(:controller => 'application', :action => 'view_items_in_scale') %>',
                        {
                            method: 'get',
                            parameters: {
                                resource_type: resource_type,
                                scale_title: scale_title,
                                view_type: 'view_some'
                            },
                            onLoading: show_large_ajax_loader(tab_content_view_some_id),
                            onFailure: function(transport){
                                alert('Something went wrong, please try again...');
                            }
                        });
            }
        }

    }

    function deactivate_previous_tab(){
        //First change the color of the previous chosen tab
        var previous_active_tab = document.getElementsByClassName('tabberactive')[0];
        previous_active_tab.className = '';
        //Then hide the content of the tab
        var scale_and_type = previous_active_tab.childNodes[0].className;
        var scale = scale_and_type.split('_')[0].strip();
        var resource_type = scale_and_type.split('_')[1].strip();
        var tab_content_view_some_id = scale + '_' + resource_type + '_view_some';
        var tab_content_view_all_id = scale + '_' + resource_type + '_view_all';
        var tab_content_view_some = $(tab_content_view_some_id);
        var tab_content_view_all = $(tab_content_view_all_id);
        if (tab_content_view_some != null){
            tab_content_view_some.hide();
        }
        if (tab_content_view_all != null){
            tab_content_view_all.hide();
        }
    }
</script>

<div id="scaled_items">
    <div id="all_results" class="scaled_items">
      <%= render :partial => "assets/resource_by_scale",
                   :locals => {:scale_title => 'all',
                               :tabs_id => "resource_by_scale_all"} -%>
    </div>
    <% scale_titles = Scale.all.map(&:title)
       scale_titles = ['all'] + scale_titles
       scale_titles.reject{|s| s == 'all'}.each do |s|%>
    <div id="<%= s %>_results" class="scaled_items" style="display: none;"></div>
    <% end %>
</div>




