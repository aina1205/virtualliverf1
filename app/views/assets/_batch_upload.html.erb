<%= javascript_include_tag 'attachments' %>

<%
   # determine the asset type from the controller
   upload_field = controller_name.downcase.singularize.underscore
   # inject the attributes data_url and local_copy in the asset type, e.g. @model. This keeps the form clean.
   obj=eval("@"+upload_field)
   class << obj
       attr_accessor :data_url, :local_copy
   end unless obj.nil?
   obj.local_copy=1 unless obj.nil?
   asset_name = text_for_resource upload_field
   @attachment ||= Attachment.new

   @new_attachment ||= Attachment.new
   @allowed ||= Seek::Config.max_attachments_num - resource.attachments.count

-%>

<div class="box_infotext">
  <p>
    You can register a <%= asset_name -%> by either directly uploading a file, or registering a URL. Please test the URL
    before
    submitting. <%= link_to_function "More info " + expand_image, visual_effect(:toggle_blind, "more_upload_info", :duration => 0.3) -%>
  </p>
    <span id="more_upload_info" style="display:none;">
        <p>
          When registering a URL you can specify that a copy of the data should be stored
          within SEEK. This is recommended and is equivalent to uploading a file. It also means that should the data
          behind the URL the data is still available from SEEK.
        </p>
        <p>
          If the URL results in a redirection or unauthorized response, then SEEK has no option but to store only the
          URL. In this case, when another user selects to download the <%= asset_name -%>
          then they will simply directed to the URL (for example, so that they can login to access the file).
        </p>
    </span>
</div>

<div>
  <div id="upload_type_selection">
    <ul id="switch_upload_buttons">
      <li>
        <%= link_to_function image("file_large"), "from_file_selected(); return (false);", :class=>"block_link_active", :id=>"upload_from_file_button", :title=>tooltip_title_attrib('Add from a local file') -%>
      </li>
      <li>
        <%= link_to_function image("internet_large"), "from_url_selected(); return (false);", :class=>"block_link", :id=>"upload_from_url_button", :title=>tooltip_title_attrib('Add from a remote URL') -%>
      </li>
      <li id="upload_options">
        <div id="upload_from_file">
          <p>
            <b>File to upload:</b>
            <span class="required">*</span>
            <br/>
            <%#= file_field upload_field, :data -%>
            <% if action==:new %>

                <% fields_for @attachment do |attachment| -%>
                    <input id="attachment_data" type="file">
                <% end %>
            <% end %>
            <% if action==:edit %>

                <% fields_for @new_attachment do |new_attachment| -%>
                    <input id="new_attachment_data" type="file"
                           <% if resource.attachments.count >= Seek::Config.max_attachments_num -%> disabled
                           <% end -%>>
                <% end %>
            <% end %>


            (<span style="color: red;font-style: italic;">MAX. <%= Seek::Config.max_attachments_num %>
            files</span>)


          </p>

        </div>
        <div id="upload_from_url" style="display:none;">
          <p>
            <b>URL:</b>
            <span class="required">*</span>

            <% if action==:new %>
                <input id="attachment_data_url" type="text">

                (<span style="color: red;font-style: italic;">MAX. <%= Seek::Config.max_attachments_num %>
            files</span>)
            <% end %>
            <% if action==:edit %>
                <input id="new_attachment_data_url" type="text"
                       <% if resource.attachments.count >= Seek::Config.max_attachments_num -%> disabled
                       <% end -%>>

                (<span style="color: red;font-style: italic;">MAX. <%= Seek::Config.max_attachments_num %>
            files</span>)


            <% end %>

            <%= link_to_function (image("new") + "Add"), "addToList();return false;" %>
            <br/>

          <p style="clear:both;">
            <b>Make a copy?</b>
            <%= check_box upload_field, :local_copy, :id=>"local_copy" -%>
          </p>
          </p>
          <p>
            <span id="test_url_result_icon"></span>
            <span id="test_url_msg" style="display:none;"></span>
          </p>

        </div>

      </li>
    </ul>

  </div>


  <table id="pending_files">
    <% if action==:edit and resource.attachments.size > 0 -%>
        <%= render :partial => "attachment", :collection => resource.attachments, :locals => {:resource=>resource} %>
    <% end -%>
  </table>
</div>

<script type="text/javascript">
    from_file_selected();
    if ('<%=action.to_s%>' == 'new') {
        var multi_selector = new MultiSelector($('pending_files'), <%= Seek::Config.max_attachments_num %>, '<%=resource.class.name.downcase%>', 'id_image');
        multi_selector.addElement($('attachment_data'));
        multi_selector.addElement($('attachment_data_url'));
    }
    if ('<%=action.to_s%>' == 'edit') {

        var multi_selector = new MultiSelector($('pending_files'), <%= @allowed %>, '<%=resource.class.name.downcase%>', 'id_image');
        multi_selector.addElement($('new_attachment_data'));
        multi_selector.addElement($('new_attachment_data_url'));
    }


    function addToList() {
         var url_element = ('<%=action.to_s%>' == 'edit')? $('new_attachment_data_url') : $('attachment_data_url');
         <%= remote_function(:url=>{:action=>:test_asset_url, :symb=>"attachment"},
                                   :method=>:post,
                                   :with=>"url_element.multi_selector.current_url_element.serialize()",
                                   :before=>"$('test_url_msg').innerHTML='';show_ajax_loader('test_url_result_icon');" )
                                   -%>

        var new_element = document.createElement('input');
        new_element.type = 'text';
        var old_element = document.getElementsByName('attachment[url_' + (multi_selector.id_url - 1) + ']')[0];
        if (old_element.value != "") {
            old_element.parentNode.insertBefore(new_element, old_element);
            old_element.multi_selector.addElement(new_element);
            old_element.multi_selector.addListRow(old_element, old_element.multi_selector.object_name, old_element.multi_selector.method);
            old_element.style.position = 'absolute';
            old_element.style.left = '-1000px';
        }else{
            old_element.focus();
        }


    }


</script>