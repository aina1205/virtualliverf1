<% is_inline_viewable = Seek::Config.experimental_features_enabled && (display_item ||=nil) && display_item.is_content_viewable?
   title = ''
   resource_text = item.class.name.humanize
   if is_inline_viewable
     title = "View inline the content of this #{resource_text}"
   elsif !display_item.can_download?
     title = "You are not authorized to view the content of this #{resource_text}"
   elsif !display_item.is_viewable_format?
     title = "This file format is not inline viewable supported"
   end
   view_pdf_content_url = polymorphic_path(item, :version => display_item.version, :action => 'view_pdf_content')
%>
<%= link_to 'View content', view_pdf_content_url, :onclick => is_inline_viewable ? "isCanvasSupportBrowser();" : "alert('#{title}');return false;", :class => is_inline_viewable ? 'link_text' : 'disabled_link_text', :title => title, :target=>"_blank"
%>
<br/>

<style type="text/css">
    .link_text {
        font-size: 14px;
        font-weight: bold;
    }

    .disabled_link_text {
        font-size: 14px;
        font-weight: bold;
        color: #808080;
        cursor: default;
    }
</style>

<script type="text/javascript">
    function isCanvasSupportBrowser(){
        var test_canvas = document.createElement("canvas") //try and create sample canvas element
        var canvas_check=(test_canvas.getContext)? true : false //check if object supports getContext() method, a method of the canvas element
        return canvas_check;
    }
</script>
